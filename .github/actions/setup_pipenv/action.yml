name: "Setup Pipenv"
description: "Setups up pipenv if no cache exists, otherwise pops the cache"

inputs:
  python-version:
    type: string
    description: "Version of python to use"
    default: "3.10"
  working-directory:
    type: string
    description: "Base directory of python project"
runs:
  on: ubuntu-latest
  steps:
    - uses: actions/checkout@v2

    - name: "Set up python-${{ inputs.python-version }}"
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}
    
    - name: Install Pipenv
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv
    
    - name: Generate Cache Key
      id: cache_key
      run: cache_key=${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }} >> $GITHUB_OUTPUT

    - name: "Cache Pipenv Virtual Environment"
      id: cache-pipenv
      uses: actions/cache@v3
      needs: [ "cache_key" ]
      with:
        path: |
          ${{ github.workspace }}/${{ inputs.working-directory }}/.venv
        key: ${{ needs.cache_key.outputs.cache_key }}
    
    - name: "Install Dependencies"
      working-directory: ${{ github.workspace }}/${{ inputs.python-project-path }}
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      env:
        PIPENV_VENV_IN_PROJECT: 1
      run: |
        python -m pipenv install --dev --system
  