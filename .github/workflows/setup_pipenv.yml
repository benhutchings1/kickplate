on:
  workflow_call:
    inputs:
      python-version:
        type: string
        description: "Python version to use"
        default: "3.10"

      working-dir:
        type: string
        description: "Path to python project"
        default: "api"

jobs:
  setup_pipenv:
    runs-on: ubuntu-latest

    outputs:
      cache_key: ${{ steps.set-output.outputs.cache_key }}

    steps:
      - uses: actions/checkout@v4

      - name: "Set up python-${{ inputs.python-version }}"
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install Pipenv
        run: |
          python -m pip install --upgrade pip
          python -m pip install pipenv
        working-directory: ${{ inputs.working-dir }}

      - name: "Setup cache key"
        id: cache-key
        run: |
          echo "cache_key=${{ inputs.python-version }}-pipenv-${{ hashFiles('api/Pipfile.lock') }}" >> $GITHUB_OUTPUT

      - name: "Cache Pipenv Virtual Environment"
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/${{ inputs.working-dir }}/.venv
          key: ${{ steps.cache-key.outputs.cache_key }}

      - name: "Install Dependencies"
        working-directory: ${{ github.workspace }}/${{ inputs.working-dir }}
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        env:
          PIPENV_VENV_IN_PROJECT: 1
        run: |
          python -m pipenv install --dev
