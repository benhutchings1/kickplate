on:
  workflow_call:
    inputs:
      python-version:
        type: string
        description: "Python version to use"
        default: "3.10"
      
      python-project-path:
        type: string
        description: "Path to python project"
        default: "api"

jobs:
  setup_pipenv:
    runs-on: ubuntu-latest

    outputs:
      cache_key: ${{ steps.set-output.outputs.cache_key }}

    steps:
    - uses: actions/checkout@v2

    - name: "Set up python-${{ inputs.python-version }}"
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install Pipenv
      working-directory: ${{ github.workspace }}/${{ inputs.python-project-path }}
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipenv

    - name: "Cache Pipenv Virtual Environment"
      id: cache-pipenv
      uses: actions/cache@v3
      with:
        path: |
          ~/.local/share/virtualenvs
          ~/.cache/pip
        key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}

    - name: "Install Dependencies"
      working-directory: ${{ github.workspace }}/${{ inputs.python-project-path }}
      if: steps.cache-pipenv.outputs.cache-hit != 'true'
      env:
        PIPENV_VENV_IN_PROJECT: 1
      run: |
        python -m pipenv install --dev
    
    - name: "Output Values"
      id: set-output
      run: |
        echo "cache_key=${{ inputs.python-version }}-pipenv-${{ hashFiles('api/Pipfile.lock') }}" >> $GITHUB_OUTPUT